name: Build & Publish docker

on:
  workflow_call:
    inputs:
      pkg-file:
        type: string
        description: The path to the pkg-info file
        default: pkg-info.json
        required: false
      pkg-version:
        type: string
        description: The version of the package (latest by default)
        required: false
      registry:
        type: string
        description: The registry to push the images to.
        default: docker.io
        required: false
      tags:
        type: string
        description: The list of tags to set for the built image.
        required: true
      docker-username:
        type: string
        description: The username to use with `docker login -u ..`
        required: true
      docker-repository:
        type: string
        description: The repository to push the image to (could be `FooBar/project42`).
        required: true
      platforms:
        type: string
        description: The platforms to target for.
        default: linux/arm64,linux/amd64
        required: false
    secrets:
      docker-password:
        description: The password to use with `docker login -u ..`
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Determine pkg version to use
        id: pkg-vers
        uses: ./.github/actions/pkg-version-to-use
        with:
          pkg-file: ${{ inputs.pkg-file }}
          pkg-version: ${{ inputs.pkg-version }}

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.1.2

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ inputs.registry }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.docker-username }}
          password: ${{ secrets.docker-password }}

      - name: Generate tags & label
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        id: metadata
        with:
          images: ${{ inputs.registry }}/${{ inputs.docker-repository }}
          tags:
            type=raw,value=${{ steps.pkg-vers.outputs.version }}
          flavor: |
            latest=${{ steps.pkg-vers.outputs.is-latest == 'true' }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          provenance: mode=max
          sbom: true
          platforms: ${{ inputs.platforms }}
          build-args: PKG_VERSION=${{ steps.pkg-vers.outputs.version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ inputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: printenv TAGS | xargs -I {} cosign sign --yes {}@${DIGEST}
